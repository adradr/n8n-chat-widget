name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.1)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build widget
        run: |
          npm run build
          npm run build:bundle
      
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit dist files
        run: |
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Remove dist from .gitignore temporarily
          sed -i '/^dist\//d' .gitignore
          
          # Add and commit dist files
          git add .gitignore
          git add dist/
          git commit -m "Release ${{ steps.get_version.outputs.VERSION }}"
          
          # Push to main branch
          git push origin HEAD:main
          
          # Move the tag to the new commit with dist files
          git tag -f ${{ steps.get_version.outputs.VERSION }}
          git push origin ${{ steps.get_version.outputs.VERSION }} --force
      
      - name: Create dist archive
        run: |
          zip -r dist.zip dist/
          tar -czf dist.tar.gz dist/
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          target_commitish: main
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## ðŸ“¦ n8n Chat Widget ${{ steps.get_version.outputs.VERSION }}
            
            ### Installation
            
            #### CDN (Recommended)
            ```html
            <!-- CSS -->
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/adradr/n8n-chat-widget@${{ steps.get_version.outputs.VERSION }}/dist/chat-widget.min.css">
            
            <!-- JavaScript -->
            <script src="https://cdn.jsdelivr.net/gh/adradr/n8n-chat-widget@${{ steps.get_version.outputs.VERSION }}/dist/chat-widget.min.js"></script>
            ```
            
            #### Bundle (All-in-one)
            ```html
            <script src="https://cdn.jsdelivr.net/gh/adradr/n8n-chat-widget@${{ steps.get_version.outputs.VERSION }}/dist/chat-widget.bundle.js"></script>
            ```
            
            ### Downloads
            Download the archives below to self-host the widget.
            
          draft: false
          prerelease: false
          files: |
            dist.zip
            dist.tar.gz
            dist/*
      
